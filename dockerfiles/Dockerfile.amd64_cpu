FROM carml/base:amd64-cpu-latest
MAINTAINER Yen-Hsiang Chang <yhchang3@illinois.edu>

# Build-time metadata as defined at http://label-schema.org
ARG BUILD_DATE
ARG VCS_REF
ARG VCS_URL
ARG VERSION
ARG ARCH
ARG FRAMEWORK_VERSION
LABEL org.carml.go-onnxruntime.build-date=$BUILD_DATE \
  org.carml.go-onnxruntime.name="go-onnxruntime bindings for go" \
  org.carml.go-onnxruntime.description="" \
  org.carml.go-onnxruntime.url="https://www.mlmodelscope.org/" \
  org.carml.go-onnxruntime.vcs-ref=$VCS_REF \
  org.carml.go-onnxruntime.vcs-url=$VCS_URL \
  org.carml.go-onnxruntime.vendor="MLModelScope" \
  org.carml.go-onnxruntime.arch=$ARCH \
  org.carml.go-onnxruntime.version=$VERSION \
  org.carml.go-onnxruntime.framework_version=$FRAMEWORK_VERSION \
  org.carml.go-onnxruntime.schema-version="1.0"


########## DEPENDENCIES INSTALLATION ###################
ENV DEBIAN_FRONTEND=noninteractive

RUN apt-get update && apt-get install -y --no-install-recommends \
  tzdata && \
  rm -rf /var/lib/apt/lists/*

RUN ln -fs /usr/share/zoneinfo/America/Chicago /etc/localtime && \
  dpkg-reconfigure --frontend noninteractive tzdata

########## LIBRARY INSTALLATION ###################
WORKDIR /opt

RUN mkdir onnxruntime

RUN mkdir src && cd src

RUN apt-get update && apt-get install -y sudo && rm -rf /var/lib/apt/lists/*

# SOURCE INSTALLATION
ARG BRANCH=v1.3.1

RUN git clone --single-branch --depth=1 --recurse-submodules --branch=${BRANCH} https://github.com/microsoft/onnxruntime.git && cd onnxruntime && \
  git submodule update --init && \
  ./build.sh --config RelWithDebInfo --build_shared_lib --parallel

RUN cp -r include /opt/onnxruntime/
RUN cp -r build/Linux/RelWithDebInfo /opt/onnxruntime/lib

RUN ls /opt/onnxruntime/lib

ENV LD_LIBRARY_PATH /opt/onnxruntime/lib:${LD_LIBRARY_PATH}
ENV LIBRARY_PATH /opt/onnxruntime/lib:${LIBRARY_PATH}

########## GO BINDING INSTALLATION ###################
ENV PKG github.com/yhchang3/go-onnxruntime_dev
WORKDIR $GOPATH/src/$PKG

RUN git clone --depth=1 --single-branch --branch=master  https://${PKG}.git .

RUN dep ensure -v -vendor-only

RUN go install -a -tags=nogpu -installsuffix cgo -ldflags "-s -w -X ${PKG}/Version=${VERSION} -X ${PKG}/GitCommit=${VCS_REF} -X ${PKG}/BuildDate=${BUILD_DATE}"

RUN cd examples/_fixtures && ./download_alexnet.sh && \
    cd ../..

RUN go test
